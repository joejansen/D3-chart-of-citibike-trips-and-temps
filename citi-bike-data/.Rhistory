install.packages("shiny")
library(shiny)
runExample("01_hello")
require(devtools)
install.packages("devtools")
require(devtools)
install_github('ShinyHelper', 'jayemerson')
library(ShinyHelper)
demo("EPI_2012")
runApp("EPI_2012")
data(epi)
x <- epi      # Because I'm lazy
shinySkeleton("EPI_2012")
runApp("EPI_2012") # Interactive, not over the web
help
library(shiny)
runExample("02_text")
data(epi)
x <- epi      # Because I'm lazy
shinySkeleton("EPI_2012")
createApp("EPI_2012")
createApp("EPI_2012")
runApp("EPI_2012")
runApp("EPI_2012")
help
install.packages("shiny")
library(shiny)
setwd("~/Google Drive/github/D3-chart-of-citibike-trips-and-temps/citi-bike-data")
citibike_all <- read.csv("all-data.csv", header = TRUE, sep = ",")
cb2  <- read.csv("all-data.csv", header = TRUE, sep = ",")
# Multiple Linear Regression Example
citibike_all$miles <- round(citibike_all$Miles.traveled.today..midnight.to.11.59.pm., digits=0)
fit1 <- lm(miles ~ day_of_week + maxtemp + precip + clouds + Min.DewpointF + maxwind, data=citibike_all)
summary(fit1) # show results
View(citibike_all)
fit1 <- lm(miles ~ day_of_week + members + maxtemp + precip + clouds + Min.DewpointF + maxwind, data=citibike_all)
summary(fit1) # show results
fit1 <- lm(miles ~ day_of_week + maxtemp + precip + clouds + Min.DewpointF + maxwind, data=citibike_all)
summary(fit1) # show results
fit1 <- lm(miles ~ day_of_week + maxtemp + precip + clouds + Max.Humidity + maxwind, data=citibike_all)
summary(fit1) # show results
fit1 <- lm(miles ~ day_of_week + maxtemp + precip + clouds  + maxwind, data=citibike_all)
summary(fit1) # show results
fit1 <- lm(miles ~ day_of_week + maxtemp + precip + clouds + Min.DewpointF + maxwind, data=citibike_all)
summary(fit1) # show results
